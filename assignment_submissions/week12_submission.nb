(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    131562,       2787]
NotebookOptionsPosition[    127828,       2657]
NotebookOutlinePosition[    128167,       2672]
CellTagsIndexPosition[    128124,       2669]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.654236269528697*^9, 3.654236275966015*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Remove", "::", "rmnsm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"There are no symbols matching \
\\\"\[NoBreak]\\!\\(\\\"Global`*\\\"\\)\[NoBreak]\\\". \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Remove/rmnsm\\\", \
ButtonNote -> \\\"Remove::rmnsm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.656635208238087*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"PoissonDistribution", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656635219354131*^9, 3.656635244845461*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.656635228237634*^9, 3.656635245330643*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variance", "[", 
  RowBox[{"PoissonDistribution", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656635246568606*^9, 3.656635252269029*^9}}],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.656635252694361*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], "*", 
    "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656635253926771*^9, 3.656635300669636*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["\[Mu]", 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.656635296138833*^9, 3.656635346633413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], "*", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656635334345889*^9, 3.656635350228895*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Mu]", "2"], "+", 
     SuperscriptBox["\[Sigma]", "2"]}], 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.656635394140264*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], "*", 
    RowBox[{"x", "^", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656635336261729*^9, 3.656635341696233*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Mu]", "2"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", 
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]], "]"}], "\[GreaterEqual]", "0"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.656635426299732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"n", ",", "p"}], "]"}], ",", "k"}], "]"}], "*", "k"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656635407942002*^9, 3.656635426063564*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"n", " ", "p"}], 
        RowBox[{"n", ">", "1"}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "n"], " ", "p"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}]]}], 
        RowBox[{"n", "\[Equal]", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.656635431558574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"n", ",", "p"}], "]"}], ",", "k"}], "]"}], "*", 
    RowBox[{"k", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656635432739325*^9, 3.656635437126852*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "n"], " ", "p"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}]]}], 
        RowBox[{"n", "\[Equal]", "1"}]},
       {
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", 
           RowBox[{"n", " ", "p"}], "+", 
           RowBox[{
            SuperscriptBox["n", "2"], " ", "p"}]}], ")"}]}], 
        RowBox[{"n", ">", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.656635442268662*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"BinomialDistribution", "[", 
       RowBox[{"n", ",", "p"}], "]"}], ",", "k"}], "]"}], "*", 
    RowBox[{"k", "^", "3"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65663544538295*^9, 3.656635452824869*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"n", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], "n"], " ", "p"}], 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}]]}], 
        RowBox[{"n", "\[Equal]", "1"}]},
       {
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"n", "-", 
           RowBox[{"3", " ", "n", " ", "p"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["n", "2"], " ", "p"}], "+", 
           RowBox[{"2", " ", "n", " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["n", "2"], " ", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["n", "3"], " ", 
            SuperscriptBox["p", "2"]}]}], ")"}]}], 
        RowBox[{"n", ">", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.656635455067833*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MaxwellDistribution", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Pi", "/", "2"}], "]"}], "]"}], ",", "2000"}], "]"}]}], 
      ";", 
      RowBox[{"Mean", "[", "data", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "5000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656635466373728*^9, 3.656635563998248*^9}, 
   3.656635608463942*^9, {3.656635648782075*^9, 3.656635778027351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data1", ",", "20", ",", "\"\<ProbabilityDensity\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656635723101612*^9, 3.65663576005958*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.511]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.511]], RectangleBox[{1.93, 0.}, {1.935, 0.08},
     RoundingRadius->0], RectangleBox[{1.935, 0.}, {1.94, 0.08},
     RoundingRadius->0], RectangleBox[{1.94, 0.}, {1.945, 0.24},
     RoundingRadius->0], RectangleBox[{1.945, 0.}, {1.95, 0.36},
     RoundingRadius->0], RectangleBox[{1.95, 0.}, {1.955, 0.76},
     RoundingRadius->0], RectangleBox[{1.955, 0.}, {1.96, 1.88},
     RoundingRadius->0], RectangleBox[{1.96, 0.}, {1.965, 3.6},
     RoundingRadius->0], RectangleBox[{1.965, 0.}, {1.97, 4.72},
     RoundingRadius->0], RectangleBox[{1.97, 0.}, {1.975, 6.76},
     RoundingRadius->0], RectangleBox[{1.975, 0.}, {1.98, 11.32},
     RoundingRadius->0], RectangleBox[{1.98, 0.}, {1.985, 13.28},
     RoundingRadius->0], RectangleBox[{1.985, 0.}, {1.99, 16.36},
     RoundingRadius->0], RectangleBox[{1.99, 0.}, {1.995, 21.04},
     RoundingRadius->0], RectangleBox[{1.995, 0.}, {2., 20.84},
     RoundingRadius->0], RectangleBox[{2., 0.}, {2.005, 19.12},
     RoundingRadius->0], RectangleBox[{2.005, 0.}, {2.01, 20.08},
     RoundingRadius->0], RectangleBox[{2.01, 0.}, {2.015, 16.96},
     RoundingRadius->0], RectangleBox[{2.015, 0.}, {2.02, 13.88},
     RoundingRadius->0], RectangleBox[{2.02, 0.}, {2.025, 10.},
     RoundingRadius->0], RectangleBox[{2.025, 0.}, {2.03, 8.08},
     RoundingRadius->0], RectangleBox[{2.03, 0.}, {2.035, 4.44},
     RoundingRadius->0], RectangleBox[{2.035, 0.}, {2.04, 3.},
     RoundingRadius->0], RectangleBox[{2.04, 0.}, {2.045, 1.4},
     RoundingRadius->0], RectangleBox[{2.045, 0.}, {2.05, 1.},
     RoundingRadius->0], RectangleBox[{2.05, 0.}, {2.055, 0.52},
     RoundingRadius->0], RectangleBox[{2.055, 0.}, {2.06, 0.12},
     RoundingRadius->0], RectangleBox[{2.065, 0.}, {2.07, 0.08},
     RoundingRadius->0]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.93, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{1.93, 2.07}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.656635761108452*^9, 3.656635790839779*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data1", ",", "20", ",", "\"\<ProbabilityDensity\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "*", "Pi"}], "-", "8"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "2000"}], ")"}]}], "]"}]}], "]"}], ",", "x"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1.94", ",", "2.06"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.656635794006154*^9, 3.656635941044264*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.511]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.511]], RectangleBox[{1.93, 0.}, {1.935, 0.08},
      RoundingRadius->0], RectangleBox[{1.935, 0.}, {1.94, 0.08},
      RoundingRadius->0], RectangleBox[{1.94, 0.}, {1.945, 0.24},
      RoundingRadius->0], RectangleBox[{1.945, 0.}, {1.95, 0.36},
      RoundingRadius->0], RectangleBox[{1.95, 0.}, {1.955, 0.76},
      RoundingRadius->0], RectangleBox[{1.955, 0.}, {1.96, 1.88},
      RoundingRadius->0], RectangleBox[{1.96, 0.}, {1.965, 3.6},
      RoundingRadius->0], RectangleBox[{1.965, 0.}, {1.97, 4.72},
      RoundingRadius->0], RectangleBox[{1.97, 0.}, {1.975, 6.76},
      RoundingRadius->0], RectangleBox[{1.975, 0.}, {1.98, 11.32},
      RoundingRadius->0], RectangleBox[{1.98, 0.}, {1.985, 13.28},
      RoundingRadius->0], RectangleBox[{1.985, 0.}, {1.99, 16.36},
      RoundingRadius->0], RectangleBox[{1.99, 0.}, {1.995, 21.04},
      RoundingRadius->0], RectangleBox[{1.995, 0.}, {2., 20.84},
      RoundingRadius->0], RectangleBox[{2., 0.}, {2.005, 19.12},
      RoundingRadius->0], RectangleBox[{2.005, 0.}, {2.01, 20.08},
      RoundingRadius->0], RectangleBox[{2.01, 0.}, {2.015, 16.96},
      RoundingRadius->0], RectangleBox[{2.015, 0.}, {2.02, 13.88},
      RoundingRadius->0], RectangleBox[{2.02, 0.}, {2.025, 10.},
      RoundingRadius->0], RectangleBox[{2.025, 0.}, {2.03, 8.08},
      RoundingRadius->0], RectangleBox[{2.03, 0.}, {2.035, 4.44},
      RoundingRadius->0], RectangleBox[{2.035, 0.}, {2.04, 3.},
      RoundingRadius->0], RectangleBox[{2.04, 0.}, {2.045, 1.4},
      RoundingRadius->0], RectangleBox[{2.045, 0.}, {2.05, 1.},
      RoundingRadius->0], RectangleBox[{2.05, 0.}, {2.055, 0.52},
      RoundingRadius->0], RectangleBox[{2.055, 0.}, {2.06, 0.12},
      RoundingRadius->0], RectangleBox[{2.065, 0.}, {2.07, 0.08},
      RoundingRadius->0]}, {}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/3f+D/aI4DA=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.93, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{1.93, 2.07}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656635896564746*^9, {3.656635933506597*^9, 
   3.656635943268326*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQlcTen7P+PeytJsv9/PbIzZjGH4ze9vxhhjzIwlFa20WUpCxNi3VEiE
kGi1K6WNEkrZEpIlayoqJKKSVhVa7/9+33Nu7uWce2+66kafz9w7ztM973me
7/O873nf532e59Wzmm9jPcNq/tSJVl9rzbWabTN14ryvNWfNFZJ471HUezYU
RT38msK/BcJ/Ml8C4X+CqfgC5cW/fyD/4/+n6nGiYUxE9GeJuZVUnUDQi538
X3bybbqtLuR/Hwi/q3uVJO9PW/jDp3N/XX9cPb2sFn/5uuqu99lBv9u1S31K
OGhfV3FrZZj9mGkTva+2eVIr4JHbeSqCqrunvf4c/FlIbg3VmdA6vm6ToPEE
NYW2cS42Ux18giaHbnH6e+PJAqpG2KoC2lavK0vy9Jo+e9z6XcHzdrra6y6P
zKGqhK1+Ttr+BG0b5YZZ3+vZpVvKjz17pvTs2T2+x4A1ahnPJdoXypzrEOW8
0MwrJGzZdsf5vTYnlwNYLvoXCmme8166+Y8ay30bFoV2UgwwXErtSFviV/ST
hd8lR05p9uhnfO4JxXDTRlBb0Tkn+wkxAZrG5wuqH+4JNumtZ3EwH3Q2xr9s
UJPtX2qyru+TCzPD+hrFvFdQJ/hAUJpwzqLfNPXEMkHjmhVoFB3TXdFv8Q3q
mUDwsaDoeIJO/+VqaSINAo2qv/JOhX8flVEB2D6oKc1QzyyrFWu6VrsgxtSz
7/QrVLlA0Kn6gd/Zv39fpZb+nIsuYFTYmLYFXPcybX/YqLbZtNe50TxzapCS
YnMqhKberu5pxvLQJTZOM5audXZx0Lj09S8bP8gszdjnOkJnv56BwQED/aEF
//33fw720bP50v9+ZeeGNaWaWVnhnjSz1z+/et3F6NNeUJGUPKtX36+97lax
2Zf0pgTfPM/02Ww5Jap9XkW2e8TMn0O/N43k5dcIaN3whd/PDe9HbOjuf5Pu
ioT8vvC7NCzBqJvhnxGPqFrCxNXUqT/2+cYjs4CDXsWohaNJdSlNVpFfvHTb
l6/FYA+Pmze4FCGdQWkyl3ApRJq58Ovlrpx327XP3u+MCfDCAXH7vT5dND6O
LarSyj3s0y0ovUK1rvJOglv/QbBuNh3z6znkaqosING8m02fTVngsHN19s7b
f3yn9/HxojrWoU42a1BHXb/ScwvSBvzQ0f97C9926U/rmKaEw3XehqjZ9h1j
8msoBjxhn3uUEN7/q4GD44pBaSt4diPZoVf33jOuZLHR/zfjWgXF3Z4aV3vk
vjYs93XhbEtdSlslbBrgbopTTGFTjzg1IJeNlMSc1v5mZP/wPJjeFzUPA7L6
fqX50YliwXuCujKL6/7bPo/PSZfPRriaqpqa5fNzesduU21Xu9gdHT/0r0lW
227jXSPFRqS1J/ik5tHBpIk//WI9aesx2xCXxT/uTCUdipkwqcGG1KvLqghN
SBlSdFxn1W92qeSZbV70uogzhl1H/kG330FQfuXmlO4/f7f+9mMOeiX1hULa
f855r/ztq0tpv5JNdZ0Uwno5pyrlG5BmZrr/PXWADxnP+pRdnHLgZ/09vNwa
wgpmadOOeK+9PP3ngdKNrb20pj6vzglO0/9B8/OQnJqvpY9pXE38WpY43uf3
qZfw8u5aeWv9zqFWF6gnEvZVaXYvZGWn6AdVwp5Z7Bo/r/uOrhPI78VArB32
ONp0S5/JF6ky4Wul+v72+L8GuKreruSii+u/Me1z3yt/++pS2mfVVie5m24v
rWlx7X1GiS0Iobaqnx4nhafN+eFrKJKef6gIF1Q3nfyXrhm9Lchvvdvc5Z0O
PqhkRk3e+3VPEuOWDtT4LLR+8sbRTHvWZujZQfWw/OiFezWNPT64VForlRl1
rlYwSXIMWLbWfHOAn5P70tm/uiWWkkGNlqFDXXnK1k3WWjf69+gS/+2A6Z32
CG9jeg1wXhrpNGfMhsC9Dr7Oi7rvulkhWtSx0TvJbLID162s93SW2Z4qV3tt
OLUgrbn2XM29rIpPafNg+vgnlY+u/+tyYTW5+i8LrQP9ZAyAn1fmJEwK2hb6
W8z5O20qhIvwLiy/T5Tye2awE3eBfMwMNbSfREB/8G2iHH9HrxMQL44l+Q3r
De1YaG1p9Lo+eFAKcqnW0J3PhgzenmVosPuspeW+wDlzj65a7nx21gaPKyN9
/dN7H4h+KOzol5KfMe3gX/i0a4G0tkrES9PR3gdp+ZIlS5wXL17iOX++U5jN
lFVHJlituWpm6vZ4mLZXrs4wr1JNDR/B339ueT540CbSRgc57UmF217Zfk7T
PhKxtMrBYanngvlOO2fNXLF/svXqOMtx6y6OHrU+f7i21/MhgzZVD/p7c97w
YV74/cJ1bheHBu3J/Nfp8yUtUZMtkefG0FTJ90edY+MLnVauPme/Zl0i/nxj
nHlopcbgbVmmJoEH7BcddvdwT3D08720dpPP+V9v3szv9Di/vE1tbR3FjG8K
MMSOLDQ1ZqLw7Fl1n7Sb+ZHWk1ziLcxdswz0PNAHngj7Q5a+nsepcRbrPBYs
cOLDWine8klT7F4Wmo3GBo689yqsPcbgTvf++Q952mP7nby0ZmrvQwma8PPe
xevPfo2Iyp67fuPlsBkzD+frDNv1ePgwv8wRhoHOK1ae3Ttq9Iof7t8rbltZ
WcNqRV82zIrUaSt6r65O0P3evWLvDevjQ5ctPXbXzCTonqlx4I41LidHnD51
t93z59VQTYdWi2nm9tqB5jHeaslBU7OVSbq668sHD/Ip1hjsfVlf3/WAkOZp
abWE4tPKapB59KCHFVjXguCga7FzZkUW6un4pejquJlv2ZH6YXziE0Xo9Y3S
pOi/xdPU6G/1hEtl4zdtS8kcpu1eOWTQtnNTbSImHIpK+/LRozLqF2710puf
qv8uLX12yMR0VZa2lnutcL50SWg2O8zHLWsro3u3qlKBND6tyjYXrz/VCNqb
uXvOvGPF2pq+e4UDftio0c54p1N9uVX5P1qVPbKyihcF7r6KgfrsNJv94w7H
pGPiQa9blUOL75pm6ZVm2w/PJJZiBXrTxCTk0tixYdM3el79OP5CKf4KLH7j
Vm5vWrn8mppagzPxd+NmzYzMGDs6ZPq+8BTVqqraNq3KbUJaW3HaB2cuPtmy
yC5OuK7bHjpr9pHfww7c54tBINLgr2LKJbrtQ6u0X2rKoyjbhTHZxiN3TxSO
2Pya6trWUfdN0lRBW2tn53jawnzdU43Bm66YmboFTv9npRpWQ1I6IT348v9I
vp4rXO7tKdId7hc0euzyVk0pnkbLoYKFD6av6BwhTo7Hu92/X0IN5NZQP1pD
FkcOZ5QMGewNt1/Hk+eKW4fCNzXx5P838khO/PjxEQ+0ND3g5xjMrZzfaYfG
qomT7Zc7rz5XOEzbb4LPlmTomGmtVUMKoEEWIo8K/b1SiHf8iBFrsSREXyLU
IbLUpCqC5Of90Q8vmpuHRdlMPfRpXEKxaqumFEGTmBvQc3P+76kpeaXDtH3h
P8SKbKgsJamJo8FPTHq6bKXL+Yd6ugE6AcG3KJVWTSlcU8ye7eSDB27kGRr4
r9i+/SKlJUtNklDQiwH+gL377+Xo6fo7rnI5jyGQ16otRUzNJbQl/Kg/fVq1
23l5bNKE8Xu/z84u0ZahLHrc47tZTVx8V1vbPX348A0uE6wdeM05JW+56lAT
V8d3Dx+UYpskwHnFCeLMGMatC3qOpwrHhYf7xoQsM5MgLJRAbdXE69BURJr4
69q1nNwRBgEzw/YmUzovL0rp6Rs/cpHtYYxv/3cro6AV79ehEV/7qNjjtx/r
6+7STEzM1uU2dnoyxjOMP30XvnW/sRZOVCviDaZFmZiuum9iFPjT7duFlB43
3Bo0TePSxQdlQwb5aAbuuUO1b4VbbhrD82w39ytFGkO8v8rLLaP0ueGmZ7G8
bRaWjpiaagWG3mmd2DSAxiyN7da4JmYYGQVvHD9hCWUgC24y/GDphinmwNDw
u21bEZebRi9x+UA8zcQ4+IsTZwohk0zQVUSSY27/SGf4LviCm8210RKRp5es
KlM9vK/dGTkiCEE2oBC5ZMKvKi4+hhmESfzvYExOc7ksWqIGmK0L/V2BGQie
/PZIXL4oUFJiaSXl/Tr0Vd8EPkY7/dNydXX8vzx+uqDZfBMtUSWMZ2Ds1p2p
2GT66eDhHErcWyC3Stj8EDz0tatjRu9tf/ZyGSW+cdWqFuk0Br/vD8c+wkBj
vnVHKsW28SeuFqIVNmUw+vS2dzh5YNo/0bzEpKdUc3mEWoYy1EDDhp3os8bO
zrFQW9M7atJEF+G7QEiR+cZg1YHqhasVJyZOPODitCKhVQdSaarihs6rra07
Pmd2FPw1pg1Dnuk22Kq7b6C/29Bvd4bES6cVeanIr/PxPhe5yDYGGmgg8syE
CxNVDGIYzEAhv2kKF0TLQLveeWZ8Mu5OmvnY0A/Lyysps4ZBzawq/nH3unZ9
lNkevG+byrXWMlAma1Zk8OSMNAzolZlZOEoGwO3p6PUkU+MNt0YYuLcarSRt
xaTJdogDnRQVeZMazY0l/Zrk/au09HnpcG3fCNNRK1thfEGLHWnkEr1wQTSi
4aXBaEjTfklPewy3YiesXZvCrajsMDL8IVAEIQhIhKHGvDwnHkGDB6yPT5p0
kMSEtL7t651/mJNikYb4DWostw0yMKLnn7ewCIeLthXGFzAi7AjLK8K7TBjJ
+6h79LG8guHafnCENIUPVdmRZGYxffdFZsPD+VlcQhH4lwlmvW8U+Y71Xbwp
fKPKjigzBW97/kr5DVOTkNHbfG+AIp+N1sMKj8EFYZef5L35+rsMK3gkfNLI
8M4ZGq67oaOzgVy1kctUJfzIPaOO5sLQ8TpvCj+yEsIq4c1i0kj+TErKRYDA
J0VFT6lxNKJ07qmq8PuZQ5qz5pG+mpPHuAbuMQ7dm8B/XC3gywc4PkisRexu
K+D1EWdI7bw9elQwVqCUJQ04XfRAlVdXU4k6Hbjq8+SinaWl3z0Ui+FxAc5k
/a52sF9aojXUx2/mTGdhd2lQJvDbDPWSXX6X9zguPUauGKiZrMmulbfWHBow
/ARV/OLnEvjS7heeSdyJO1cnTgiDR4ZqiswrZYeWSVDqkpdXhoAY/J8aT0Pb
nh5X1GvLUgJ3junq/D8HUuKRoKsCbOnaILwTs2dGTt0fkSquqlZMKR4ys2Gy
5Gq8+Mig0qnqQciBGfr9C7r9+xPf3uM3d0gprzdHCbOlXVk8OF0wqiP4+B2F
WCJiER+86e6MNgsmufVW4vDy2gqepflttPT++HJRNXnvvQwrcWC18XFbH/9u
gvnK/gDGRFQOmCDxAhN+1+jmR46+1bvrd7e+6/qjrYZLWv0QwAYpxYOFPjLU
JwGKVFNkPyofuCri4Noc2J+KAZKaKPG+ArKfl+cUvldZx/6+ov1ZKhhXT8/4
5wDxcQnoGFuF+wCVGMKPysoqRV5nEYRsCwQGLpEpjzl27NY7BBdfBBeK2+Az
iRsp2sPHH3A9KRcxmRg938Ruh5KCBDuCPcGupIBEL0V5++3tjiAc+x0xI8Lf
3qVLjpHZnLVMeBDPCzBXT7S2fxfg2Wph6YgyUkjsl4CHoGNOg4Js2ONGRi7k
FkVvMyghKEjEsY48eJNIL8VmGHhQrwa7DcjOf6vhYXiBPxbB2CrV1bXUZG54
LGjaNT299Ug8azQULQSew5OnRJK9E0gvGx4PywlLUF8LNfneangYR/Efe/ff
Q2y588TJ9tQUmfBAnE129nEkQuodgCduwsQDKHZF+JQJD5kAwF2MbSNkTCt6
20iZEGK2gwaFhN/F5gVqF4FX+UDCvW5LHOPdFy89/Q6AlGBpuc9su99NXMkD
Uht6B2O91cTFTwcP3EQSPxpdkEuZcGF2vrR3h95GRBSMR4SNtG5G+7h4q7Zu
ubDFdd3peh+CIl0AygQTEx2JDdNEc/Pwkb4B6awh+a9MFRmgPn7y5DnyCj8v
KKh4F4AyFfaxy2PH7CU7zLKAesm2aAcfz83L8ywqt9LL/bcfsitjxuw18AvM
IFevBxlc+vDIYcn7VkPGhIQjbTTV1JS88ljTMaRARrs/eX6rV8YtDAq8Rr8R
337IMAuf6L0lWZzWQMh+vHu36KHRiACyNn6bIWM6IQrVI2sWAWCs2SVSIKP9
mDxUkyEhoCKP8FsO2a55848vWOd2iVy9HmT9k5PzblqMDSUFu98uyNQkaMJP
l2OnCrBS+Sg+sVQiLU8OuGjXJi9++j8HULyAXCl6M6Z54VJ9GS5XR6f4dY5O
Z8RDU+RHSi/hTBZCst92pGBMqO/2+YkzRbKQIkAx+GD/KcVy3B4UKXnL8FER
pyEIcueChbESkXpymBH9JxXU9EXCj4je6I0DJYAG/KBU3ZMhg3w2jRu/lF7q
SlkGMljA4wlvec+7mUVvARb1e2zjY6LTsTE0mxsB2pHJnxcSkrR13dpTIulb
uPAYA1ItLfZg61C28Fhu5Bvo7fpPScmzli084UUr8UI2eUHM4Zac7hM8r41u
Zxz8d11p4QZPeDk8f94h0xMn7sghNlYA6O/EV92CxfYeZ7X0gdHI3SjpLU1s
G5oGhFAFntzcmA2tZhY70cBg3WL/XXS0mmyx9c+cycrW0vJosWIzz8X5DHDi
Eh/c3JdnP4ywWG4UagzxIqeTtWBhZ2z0vJqsq+tGpJrLrWP6UDreEWOT1Vi0
NUhEZRKbmcTB34jS/jvNxy2j5skUe+2ESQ6YI39y8mxxSxYblXbgPyQ8yRYb
P/N0WHJq8eq1F1qy2MgjgzNLPrHJzObHQ0fzRM6cxux3NZfkzD5W18Mn8lEs
oN25K+XgSz7hcS8cgGO27rzRYoVvg6U/7bqsX7IxAxw57BZSV/cqSd6ftvCH
T+f+uv64enpZLeg4LtQhynmhmVdI2LLtjvN7bU6mD4Nmi8Z+CTW9XUG3zo0b
t68losZs8eH1h7GOlJMSgcfYDb3MR8Dqi+OPaSRqtQtiTD37Tr+Cc3k7VT/w
O/v376vU0p9LQ60+IQ5++VtGI4P6hR9sXA22ZobO2mvz9YPTph0S0eWDrjQs
waib4Z8Rj5AY1F5QcTV16o99vvHIrJIHOnxwTg1OIGrJ0CWbmYWScpPyQyfl
CPsKGjqSkkKvRSTy1nCQT5G2lu+/T50vaUzeWhNjhmeT59PDDW+7cPKCOSh9
JTa8S7E1zpPouW3tlZQ/v/kLjuN4wxYCnYTDjhFzp8vqk/DFkKuFMgc3znPL
uVF7paZe/7AD91Gikmx1N6amXnNBx2yuwIuD43TgxaFsmReqCvMriTPMGUQ5
j/PmBk9SYGazCHEnCF4iV42pftfMACJ8HHXVyRUDIPMnlvPF5YZnmrv3teDZ
c460dHjgT8SxTeLwyFijvAwFDm/D+I4iZS0SCmY7BVsr160s95KrRQ2Dgtmz
377QNtZ27fqL4rSWCEXgCqfYaRH7UhsBBU7lvT1yZNArUSDKC8UrGY4YdBEf
9gGKmtk1DAamI+A0QxxiLt5hlBwG1ZdhQCTO5vXrTtuLIUAAkCL3FE+fJBzI
3FLlxl7LrTGjgpFGaf9amsfKDsMidnpbCAISiZNDL17MPm8zJYJyaJj4zBID
YfDkCHiG3qDNmGYSOXyJw1HsLsoUmT5Mh+Qj4TS9Fbhq05BNtmYQEA527Afi
bHJpAtJeG/4Fm8kRw8+du4cr5ZSsfkMYOf4bPD3OLpYplFX0oTRsHSu5UBh8
sJOHI+ZlC4WDnLBE+KywsEI5hSLPxakiJ2fOOEgt4ZaIXlHzELyOk5qVdMwg
z0Wa4dijR2/JIQ5Of8S7RFnFcbWatBjFLcjIIC4OkWY+LQSOCfMfa+5EbpF3
C64JhThqZLzac+OGM4RbKTphxMH50GQnTtnEYZ4Bv0XB0CFe5MiepTLFQSbD
s0EDN5G8PCUU5889Efceaml6EG6liLOApl0XambmBo8rnKw3szjw/+JQJTnF
2TXWwgn+FKUTh3Fhw0OLrM41E6wdKEeZ4oDNdGOj4N/2RWYroziwHMQQkufL
Jw4W7dsWLjqhjOLAcpCHKp84ZAKB5EqsPbAGkXdzrCkkYvZJUVQdGSK4Ag/y
CYVfh0+fEYNCjkoo1I4FtrFz3NwvswlFZHpJlOEBwbdRilaZRGHWbqgNAPP5
z6lzJSJxZFuexAYjTitAYWO5d8maUDwbD5+kkFmzj4joDRQPHxwnjORcZRRP
wuUkr3g8usqh+4IFyyo0Bm9a5eCwlD4qRElkY5wqOLgN518RryJbOp6UmR/9
I94h2wUxZOJOlMriwGhmEX3sHE7igDVy9Xoijjx1KvPUzOkHlU5Exg/c4ezl
Msw3UCOZNd1NtogIDkXpG5QzUUYRrXy2JuNlJU6TV0Ta38hbvWXzhfpUW3kz
+ppQxDPjx0cgQ70RIuLgY6TGNihp8Q2KiOcsr3fmUTykWxRrMA4+Fda3Ou1J
4+F8H9Q2ZWRtVknYdnTgH0NMPLly5lYMIw7O5z02d06UEojzyq6MWlVVDdwV
Xzx+XEGtlCkKbAs29k1OzpNmFuWVnZXRx4/dinCwP7KKWwra/0fy7ldu25oo
rlNlkQK2D1exbCng0ESSMgntVyIpcLYOHK6IM5ciBT2gqSCr0+BM/F0RndOv
92Y4l9iywEtiqZ/vZWo1zfaLsBq2aEvW8uOsYTWMqBZHDmdE2S6UnU/3hkWF
wWQbj9zdOT+/XCSqqGqneAQREwPTkMLfjKRwfhbo6dAFmJte0vrNDBSBxRTV
hVtIZrojs+Q27Zjiox6li9BMRFI1g1AYIZAHLUUo2gilFLumhxA+hhBsY2FY
bwZpemRlFd8zNQ6EQUqRhrZD+ctMO76YRWBt0sTGR56B0wlJ/tEaWWLJLu/M
iIN1yJl/ph1oanFcJlg74JVPcorWiA+MwF4iao4ZMKgGFFpmhBMNSVssLB2b
Ujj4nVHZnHDBCMeYlERAG79ef9ILHS+jadhEvaSv70oewraD8IbEeaSp4Tnw
6pWH4uKwvXsZNqFSpIu9n8BRvlLRbIptYOQP1fAiXKzlZtOJpqXq6Ljh/OCX
O9mbZhNurRhjk9VysilzY0LRbDLuMsTEIOuBbDisk8kmWEoxMw3F6fFNyeaS
1WsubF5kH0eeJc4m4VKMOUSD4liWJmGO8TfzE5OeZuvrBeAcdzxPJozk/SXK
N0GwJpvn+Q0xiyPOUeUPV/Izi1/j4OdFa10vNiGzOON4LA6tlpNZMWcBooFI
/jWJEGqvYP4YBy+y5ZBmRkofMTxK60X0cp9Xn0oueuO9vPhSNJwMu1ts7eKc
V6w8K6LLyS4S/i9ZTwpvMnYZ/ys2PUq0NF+N2xPxJ+UlxbAuKtRA3mtNyDoy
R+vzhRvIOu1I4VnGxKTjTE96/toErDOOQ6RM4jSxnyIP57A6E2WzjhUBnAuo
g9CUrCMPDfmb4jRO1gnntIuBh9k2Kt2JT9feBMOic+ApZpMnf5i2V+D0f1aS
K3LklZTeyPAqCoUmU+o3xCub3xJ1oRCUT87f2MjNJj3j4WERU+8zZ3P2vSE2
42bNjETtIXIlm034m4AmQvfeEJuvuE17Z2Q8xo4J8bW7c7NIr2rJ0QvzQ4KT
xKVUMIuvOBKDljvF2gf4X/GQyV2/1JRHomV4U3AHr1CxzjBfpGNJ4Y7u6Sqo
U1NvDQLGl9T4yYCE4w9H28PaKU+Z7OClf2XShHCJM2wUyA5AgTXDquVgBzq7
Mc48FAHmCmRHIhwYVZ+8Xh526fUQ3yw29jY5EYh5toIe/X5FRVXuCIOAr/Jy
y7y4QWCYAAg4PAsgKGiqiGZiFsyPjp09K5Ly5uaAHux5CHTHsKUg+HlYy+UZ
6gf8dPt2gRyPBwCFusP9jhsZuyji8SdHjlxTX/RayuNdadqC4KBrD7U0PcXP
027MwhshdBWDB/qQXSYfmY9HV8zVHOppLFwXKeLxq52cEy7Ce4PWpTx+PU3b
PcZ8OSL4sIZs1FAptp7P09XZhYrs1CaZj4fJHZk8ORLLZkU8HrkmS1etuUBM
WebjSW/FPBMcI9RJrREcMEtGLMJz9HT94ZZC8+JMEB7EHo07EJ64dtnyMwp4
NFarBMhL9NJKpvz1gUydY+ML4QvoFhP7iGmNew4p2hlvRy922RZ6o7b5kvLi
OHFZxI1sdUjEVc1z3XA5ymbqIWnsSMwa2jEWhams6HfMagh5qXCQ/LL/0APW
1ZCUUYJmTSIXX+381XIkNI7wDUhXaTx3XvaLT6LaD7l6Le5eyXmHewxxdxBc
9JjXYpFZxODoHLRHjgpiW9jIZFFyTsZIibg5+ATEH/VabDLtwdxQZslkx640
1rLGDJukDk21UW6Y9b2eXbql/NizZ0rPnt3jewxYo5bxvGF1aKRIBwcbrG5I
cFimIqTDuHbUevJBcdvhlA6Uqr/yToV/H5VBkv4/qCnNUM8sq25QvRg26RhJ
dP2DbmUZGuxGBJeIQzmlU5OQTvhBhjDcWF8eP13AWl+ZkezFlvZzw/sRG7r7
36QV09BaLmxi0YCqbBWaI8KZRHQiUgdOUVTFRWkvhCJp1Kg98BiyVfRlpKBX
ee15gpq8DVGz7TvG5NdIK6nyoqLKOm62UVGlWFvLd8YGz6tysK0izjZS1YnL
mq3QrrhN1alXl1UxgAuGFB3XWfWbXSr1rIHFTdjAp3XO7x59LA+uH9gDJOAU
oA3tvoi0nuTyeJiWF07pptqCtkmM3UqzeyErO0U/qBKiW+waP6/7jq4TLgnN
vmFVRdjYZZSLkDd0gQu//DKUFWz62GbebzdSH2ET8vvs7BLKT7yTdqgrT9m6
yVrrRv8eXeK/HTC9054HlUTdHJU75OaQUeVsN/cr5X/+4ULeA+05zYGHwsAo
tDnk8qUH1K6GjeXMrC3n935z44UdhzyKre8zBwIjTPO5xuDtc/aEXqf8X+dR
fJjGVttFJ05ZWe3HNKsty9PU6NtFYUYzwsOSqYDXeRopvIy1ASbW2CH7DvW5
2LoK495FYXxgSSKLd7/OIyXKhM8U9uiqwQO3YX3ANqgw7k0cbotQOM3ExGwq
8HWe2lbcQYhP6LSpKwu1Nb2TTYw3uNnaLiODBv04fu/09MdYOcO/8e3Dh6VB
Yk98MctVx2Nok1Xt8OxZ9Yrt2y4iP/XovLmHRpw+lYkzYpk/I94K1nd03pyo
qiGDtuE0BtCCuUXxJd/qnxYVPo1eOD/6tnANXaCn44eVd+ycWVEIWsS/K7SG
7kicYr1vxr7wlI4lxc9CuVukzVEVK7dpEftSwC4iqiYcOpT2aWFhRRj3neTb
pAX9nfxZ6bhq7r+3OFSo9/4ftY0REg==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", "2000", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"data1", "-", "2"}], ")"}]}], ",", "20", ",", 
     "\"\<ProbabilityDensity\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "*", "Pi"}], "-", "8"}], ")"}], "/", "2"}], "]"}]}],
         "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.656635949578114*^9, 3.656636030087563*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.48299999999999993`]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.48299999999999993`]], 
     RectangleBox[{-3.2, 0.}, {-3., 0.001},
      RoundingRadius->0], RectangleBox[{-3., 0.}, {-2.8, 0.002},
      RoundingRadius->0], RectangleBox[{-2.8, 0.}, {-2.6, 0.002},
      RoundingRadius->0], RectangleBox[{-2.6, 0.}, {-2.4, 0.008},
      RoundingRadius->0], RectangleBox[{-2.4, 0.}, {-2.2, 0.008},
      RoundingRadius->0], RectangleBox[{-2.2, 0.}, {-2., 0.017},
      RoundingRadius->0], RectangleBox[{-2., 0.}, {-1.8, 0.045},
      RoundingRadius->0], RectangleBox[{-1.8, 0.}, {-1.6, 0.078},
      RoundingRadius->0], RectangleBox[{-1.6, 0.}, {-1.4, 0.104},
      RoundingRadius->0], RectangleBox[{-1.4, 0.}, {-1.2, 0.123},
      RoundingRadius->0], RectangleBox[{-1.2, 0.}, {-1., 0.199},
      RoundingRadius->0], RectangleBox[{-1., 0.}, {-0.8, 0.295},
      RoundingRadius->0], RectangleBox[{-0.8, 0.}, {-0.6, 0.3},
      RoundingRadius->0], RectangleBox[{-0.6, 0.}, {-0.4, 0.426},
      RoundingRadius->0], RectangleBox[{-0.4, 0.}, {-0.2, 0.452},
      RoundingRadius->0], RectangleBox[{-0.2, 0.}, {0., 0.473},
      RoundingRadius->0], RectangleBox[{0., 0.}, {0.2, 0.434},
      RoundingRadius->0], RectangleBox[{0.2, 0.}, {0.4, 0.453},
      RoundingRadius->0], RectangleBox[{0.4, 0.}, {0.6, 0.397},
      RoundingRadius->0], RectangleBox[{0.6, 0.}, {0.8, 0.336},
      RoundingRadius->0], RectangleBox[{0.8, 0.}, {1., 0.257},
      RoundingRadius->0], RectangleBox[{1., 0.}, {1.2, 0.202},
      RoundingRadius->0], RectangleBox[{1.2, 0.}, {1.4, 0.165},
      RoundingRadius->0], RectangleBox[{1.4, 0.}, {1.6, 0.088},
      RoundingRadius->0], RectangleBox[{1.6, 0.}, {1.8, 0.058},
      RoundingRadius->0], RectangleBox[{1.8, 0.}, {2., 0.032},
      RoundingRadius->0], RectangleBox[{2., 0.}, {2.2, 0.024},
      RoundingRadius->0], RectangleBox[{2.2, 0.}, {2.4, 0.013},
      RoundingRadius->0], RectangleBox[{2.4, 0.}, {2.6, 0.006},
      RoundingRadius->0], RectangleBox[{2.8, 0.}, {3., 0.001},
      RoundingRadius->0], RectangleBox[{3., 0.}, {3.2, 0.001},
      RoundingRadius->0]}, {}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw12Wk0VW/UAPA73yiaVKiMJWMUGQr7KEWTKSEJmUlIIVEyz0PmqUxl/puH
COfIWJmlDPdeKZkSKiLje9+13vfTWb8P51n77Gfv59lrHX4zRx1LAg6H68bj
cP/7NC+Omt/aomLT0u707uXLwLHGLXRmnYpd6A4LfiJ5BZovvDJyXaFi/52z
lY+xvgJCjJp3swtULKt7U/nX4BWY2fEta2iMivGymwZGY1fBye6UQXkTFdNY
/0fDv9SEJ0eHMatAKlYj3fXq7BdtkLxnsZzhS8UmVsn7hIg68KVuToLuRcXM
B2QW1YR04KwuMeXaQyqGOSpGq9/VAbKvuAtiS8WKOPluqG/qQNiXJyLcl6lY
9Vkt+VRxXUhOEYzuZKdiUld+2PnW60G+VFJGNSsVwz+WrSuc1YPaFvbSDAoV
4261t5I8pA/D8/+6XTYp2Jkwc95znvrArdrDxjNHwXz3h7VWIAaQMusZ7NBJ
wWy1FlrUR25AqtKnpzvDKFjgQl5N2s1bUNh3OepfIAVzjcpqOpZwC+qsG9O+
+VIw2dHnSYf7bwHtWWFDtQcF69MQfHD9ijEcnvBZN7lDwbJ15jNYVE3gRYTk
w5JLFOwnn5R79EtTSBsNctRmoWA91zxdSz+bgen2bd1PyRTsghffYNiqGQjI
BR4vwTPjObA3JfOwOWRH+P9kXyVj6OFdKU8szKFIyedOxwwZOzUzvohfMoe6
FA9rtQ4ytjDwZ9aH3xKG9R1MlCLJ2Ij32sWZfGtI9f3ZYB9KxiBX8DQ6YA3G
xfY8qYFkjOyvRBrG2cBXyh36qhcZEygPLv2qbwPTldY3XzuRsX7lEv3LLLaw
sve2vrQOGSNYx3r0udvB/p5rmiL7yBjjwae22Ni7wNV17POd3WRs97sXB7+3
3YVDHWvGRWxkTI1fD/Ffuwv87VkO0hQydnFZI6fK3AHEsT/hSsskrGWtr2ha
zhHOlsR0aA+RsKjf2P4VNydwjOq/+Og5CWscvST5TssZnCNyeuuSSFjl+v2J
IUdneBDmcWMrjoT1301P5Yp0hkdBgrZ+ESRsMWNyWajLGQKe3g+K8CJhb5uu
cDzVuA+pTnvbMm+TMEk1x+XbBg+gXeua6oejJGz/eI5SRrQriCbueVXHT8Je
3QipVXjjCmGjveSiwyRsZXljac+4K2g5aLVF7WPGIzpLDJZ1g8HQq5f0yCRM
NaabLZzhBlOtalpj40QsvT/d++wZd9impGi0nEXEOt8kdI+JeIKd31rdVBoR
c1mqLEZuekLHh9rDwylEbCxqteNHmCdEGSqM1sUQMfMl3/PCvzyB86GsmY8v
EQsfT55XrX8MwuVSNmzmRGyzpVrTwsIL1EWOPhAUIGJntjWr+D70BiPq3BFD
HiJ2KO/K5Rux3uD0vWogipuILZp94NEr8YaEDHW5zT3M94+e+Ng85Q0TXPar
g0Qi5jsadc3jpg/4sZY/jfhOwCYLbkzfV/eFxh9I+L9cAmbmt2H2UcUfPr5j
UZZ6RcBKm5TTRsz8YSqnb84qg4DdGe222ennD7ssLLQ+JhEwqQOTFhut/mBK
C9xbHELABkxFNFc0AmCzoyvJwp6AFd9hbY+1DoTTRUbZ3ZIELLXGsK6lLhj+
G9glVSlGwIS7BzlIk8HAt9Fck3yMgF3ILhF4sjsEKFckOi15Cdj9j4Y2QtYh
0De98WeNnYAFh12d0dgXCnZH01SE5/BYAKtW2+nHYZCcOkZ7WojH+FUMEePH
kcDWHGdllYvHtt10400ojoSnPy4uXH6Jxz4dMdPm+BoJVqfLiAdS8RiB3G05
JxgFJwd9RP8LxWN50+P/9EKj4P3eIw+H7PDYpqDK8XbTZ7AaYrX3pAges5ML
ihE7FgNFfo4tokfx2D5P2j911Rgwe/LQTZAfjw08PlIXejsG3t8LGeHgwmOL
IVvfvFNjINmgKGt5Gx57w7mtRIYjFhSE/krXT+Gw+RfVo/2scfCw0V9XPReH
CWwMuK/sSwDxNxEUlZc47Bt1/CNVPgG+VCS8VkjHYXnhInwqhgmgnpt3SCwR
h8XZ/Th0Mi0BDkR2jrMF4TBypUX7brFEqDLa59JvjcNOSlV0TV1KgqXll3HG
x3CYNueusM2CFDAMqk5IFcRhk3ZpTjM9KYBxvk8a5sVhl6q95zeXUiBMYf65
HicO69t8JZ+JpIKAh0K2BgsO01heMRn4nArp6yl3H3/aQhWetqizsL8AfZa5
YiXjLXR7cM9OlavpICC6t6JGbwtNjY0eNTZLh7lL8q9PaW6hDPMDC9Fu6eAX
5oNJIFuoy8jcbuXMdCjbeaD3sMAWGjinz565kg7s+5HfG9830a4bMjFFeRnQ
LBAt03B3E/3rcL7jwuEs0PgUPpNguYnG5i7l6MhlwWBwcPq9W5vo05wXK4+0
s2B24emOo1c3UY5HJmr8AVmwF3UcDxXfRN0WT6GtC1lgdvNq7I0fGyi/n4x4
wIeXgIvdtrhos4GeN24wNU7IhjNkr3Ixi3U0oTf/TVxYPghPhLNEGa2jsq/m
D+wvzIf9bakmi7rrqJVz+rXyD/mwEFS7vf78OlrQlJehur0Asnf8Ndc4to7S
/hTyNYcWwB6Ouxz3ZtbQv8pJbWejC2FK4KZLldMaajuQLfi8sghiETk5lcer
6MwMJnOhsBSIrfP0Dy6raJ62iuB9tBScL+f66TmsohPD2k7FfaWgrcfVd8dk
FU2zKFPQ+1cK7PZr9vEqq2jVBbtdt9TKICgBzfxBXkVFX76dvDZRBp5zauzx
Ef9QbfG9vGSpCjBPNfg+k7aCvn8pfv7ynyqIqphU6k9YQaUz9DNtdlRDQ4dr
/JvIFXRay1Is6Wg1cG/EqoV5raALumYd0gbV0HOrN0/CZAUtKYyL1WyoBmXe
Sw5OPCuoT5+5gWDEa+DKPLO8lLqM3g9QKVdXrIXuHB4WfPJf1KYp0aqsrx54
dpScQKsW0V2Vz/TTc98CK99E93T+bzTg/eVHCefbwF7XPzE3dwH1WuLRFjjf
AaZNox94on+iha1tax9Te0BAaVO7xXsaPXFel3vjVj/k2ZSPvan6jm6Inf+V
/H0A7P6UGoUmj6GzPTGzkq6DkCT764x1yBjqLJaaVOE1CO3uUgfPPRpDXe86
yckED8JRXPHQ6o0x9InsY4EjqYPwZUehnh3XGJo0lNnY0jgI14WytS4mfkF7
3D0Dt+0YAu8ymWB28VE0s7loQDN1CI4/Id+gCI6gvqcVtNnyh4G7tidhijSC
/p71YvcpHQby35RP7yeG0cYpvpiF18NAu3tSNzJ/GP1VyTpU2zYMIbdMNDlP
DqNpP59lE78Pw6RizXlRlSFUYu9YlynPCKSv2Z/UMPmMqmubOPGEjUCYnPw9
KZXPqOK+/ENY9Ai43SeW7BH8jB6P9u40TBoBjR9JEp8nPqEm5+qPemSPwMZw
q7Cpwyc0pvvzTmtsBAxr+XidHw+gFnoPP0/8HoG97h+3x6f0o50hEW9MdGiw
svVv9/yjftRsy2Z3tAENGAG8nOqG/agfV47FG2Ma5MbaHVnl7EezCzynf9vR
QLkEp2Qc34di4qU1iz40sJ0UdxB61os6b3z9p1RKAw0HnQdeTr1o2w/dE/Qq
GsgsuT0a1OxFc40+E+7X0WCT0BQQwt6LIgRnI582GsTy3EibC+1BQ3KwC5J0
GjwpYM24y9aN7ogOWK+j0OFizfX/eDu60NbiHUeattOBoy29pjekCy0kPQhF
d9Eh76ts36ltXajoch4phZsOH7nMiZuETjQuQZqdJkEH0aA3lhEr79GO6w6s
Pjp0+GxhL1r8rRW1F9omqBhLhwa6llxVdiuqQmrZ1ZhAh2y9U6r1tq2oeG38
mmIKHR6ob976MN+CPr14+w1XJh12iUc9m1xrRrM76oOtipnx/Slf4eVoQvXF
ThddaqeDlH0i+djnt2hWY82S0gc6cH733HM8+S3aZ1DNItxFh4lP58UV+d6i
11clwr7008Gn9rOJgXgj6rnnd/FXBh1ciMvh/MENaMyXG7Iif+iguoTmSO5s
QLf7FLEFLdFhz2RQo1JcPWrG4xBMX6ZD0XvupRsZdein0RuW9uvM9Z8pG0XX
1KInefD3ucgMqPCluqZDLTo3GX5CgsoAH5eeyKKWGrTpa6OvHAsDeG+YNb3v
fY3KhVqOSLIxwIAvQJQ4U4XKPXsoWMzBAKE9mqq7narQynf0S277GbBI5DTm
/VuJzlCMl09xMuDZZN6zM4RKdPD83qH4gwx4X9S5cp+7HH1bi4+Z4GdAYnr8
Hp/0MlT3emmVmSADrKJNxKOEytA2EYlrA0cYQHT9ZVJ4shSdtGf79fwYA9we
iUa8iytC//RQUuvEGaAxt/CpOPs/dH70m/eEBDMes2re+OpC1P9XyymqJAMG
LqqWmg3lo44xT4gSJxhQWM+6qj6Th36aNDp48iQD/E70npVcy0XX32luSEgz
QJrL+OPaoRx05M7oQdZTDGANP3L4q0Q2WmDUpjfD9FfcD8t25VcoG2Jo0CjL
/L4pt+VY0yy05NiDwmvyDLAxUkY87mWifX+CN9gVGID0kIJv+2Sg7qo2exqZ
ZjgKnjJST0PJh/75sZxhQLh+Sauw3XOUduTJWBrTiqBksBSags5UO22JKzLg
h9D76cb/ktBaNU1GCdPJ7PoeEd0JqN/b9MdiSgy4+Pfbjpu/4tCp6EVaKtMr
dKcXx/bGognpX9dIygzIadmQXJSJRn9pbR82Z1rvv5BGTC8KTQk84FbDNKuo
ZDb3rzCUnPO6jwzM+P+pvyuXCUYZUbmz6ky3tpvNXnnoj/pl5zX7MC2Y6Llz
4o03eutdgGE504RuccvNTQ9U8ubeomGm6++aFkgFPEBvKouhK0z/4hT+1sJt
h/J+KgtnQxjQU8gzqqujh9ZSEri4mCbdvswXdE4ZAk91mh1kOu94ptuOWjM4
cPGaLQfTSQ+fL/UPOIFQnqQEiWn6kG1xhsZDSFe+VzTDXF/gjKytY5sXPLkv
+bONaWkN72c86b5QcDJkOoXpgSfWDv5GgdA5mZdlxbRb8dXLs5yhsN0LPSjM
NPcXaeFrAxHQaEHS+cLMh/G2cAJd/RkI+ddeiGS6mA93bxdzzpu+LL4qwzRO
4f7oOXIcNGUV2vcy862tPXHV7Vs8zC/Fv7BgOtP2Rl1+YyLkiGhGzTH3SzUZ
knY/SYVR1W8VE8z9jSsro543egGcd0qndJm+/33PGcXD6TAyd4JRc5oBzRv+
eY5rGaAyELrLhlkvs8GoafBMJshdStEoZdbXvv3/DmQNZYEPvNP6Jcfsl+P2
AZ+qX4Hcr4svrzPrMaL2ldJCdjZMu+xfdmfWa/WF0UWW+BwAlqVdcTIM2Gai
Y670IA9e0uWfFzPrPz9SHnkp9R9IyU9KuR5n7kdzWh1Vpgj0okz85Jj9ZLJC
UbgjVwwnpMUpc2IMCCmZ4eRKK4FibqPk0yIMUOaq2f3lVRkYqgwc12H2753y
2e5nx8rBTvYWT/3/9vdVvohzeeVgVZSsfpiPAb+9A1lzCivAufCsbv0hBmTP
XCc6lFeB/Ligp+c+BvT7BTfynqoGMmH8wbO9zHzz1nv1VlVD+szz6pTdDDC8
dmRdpvY1/DztIRjFPI921v1eXMNqgdqK9q2QGPAwPHIiuKsBboV9zvrwiw6v
jjW9PKOFgkD9ZR3ZeTr0Nf41+9mLguu7rnvxs3TYv1bkmGuHgXat1k65STo4
Se6f3e7QCBuHGftWR+hwNHF8vO9BE0xEKBJCmuigaLnZVFDZBDdZB8WuYnTQ
OcmZ5fe3CUg7GlfI9XR42nH5tuzDZng8GBxiUEWHYVw5PcmjBYxFKn9759Ih
wtb7k6lPG6jLuvNMh9Ah6AO+cryhDa7en6JfCmSe9xI+MTZrbRAbKtyR5UsH
t18+Wk4P2sHqSf7ZM550MHX3e+9l9Q5ct/RWcHfpcCI4sOHFpQ9wSvTby5kr
zPstNzybtqcbBgLtgrSZ92MXK7u/qWY3mK4Mqabj6dBuH2E+HtoNltePFkys
08A4UW2XK6EHeErTAwz/0OCakXrnY48ecNH5+YcxSgPF8Ytq4Xd7gSSwFmtc
TQO2xStnCrX74VvMocYbpjTYNXzS3M25H2rnVlbEDGnAgXGGno3ph4I8P86l
azTgDhsfHvzYD7OV68L2ajQQPuL5iGzwEeakIy7OSdDgrG5BjbHxAMzPl7mo
/xsB1woW+d13PsMx18EA/+AR+PKgVcbVbwSqeW4END1jzkvtZO7clyMQVBL+
qyh4GAYPnd8aah6BnnpP6xjvYehpbnqnRKaBQMn+GLV7w4BxNBqTA2gwNivY
dktrGNIq3gTFMvPMej48Q51tGIwXS2hlIaMgzBDAafsMwVzN1bdu7WNAXuf/
sWU4CNmBGaYWwd/B+biC82HiJzj6t2Dvw5RpsP2ZLhR3pR8YZbz1Z2x+ws7Z
liW2mh64nvAl6EfUAhQoNa/4+3TAi1dh9Vfif8PB+9Ti965tQLp59yfZfRFU
X+kPuYg3QZdpXo6O319o+oiOcgk2QCUb961l+xXgKhorKoiuhgmxC2n3H6xA
qUXWt90e1cB5yXls3mMF6vbXBQeZV4NnwHvLqZAVcI2p4M+RqQbVrUcOQ7kr
ENIhr5r3uQr6Fka83oyvwPQzOI/yVcFc//NML6N/IMQaIc+LVoBQMv8U9coq
IIm9JQtiZZB01O2hkO4qPCLFPSnfXwY7Sju2nTdaha/H9zwPwpfBnzY3ER/7
VTgx41du+7kUsKVOu/WwVXC6lBZP8SuFm9qPfi50rgI3Ti3q1ZcSiNrW/3tI
cw04LnAFP9MohlVXv42Ca+tgYi1Tw9qbD6wDrT/h5jpc0D5VFFSaD9zSLIx+
s3Wotwi6JBidDwrz4Q1r99ZBaUxapehaPjy0TvC6HLUO2sjbVK7BPPirn4//
0bHOnPN+pipM5MJv+R6y6IUN0LN3MlQ4kAOEhD1/669uQJdbhp3UWjbsWdKd
0L6+AcornVpnR7PhROlQq7vFBmhLdZpV5WSDk8i3wHc+GzCr1rdEV8iGOa6/
LLboBjPPEgGHzV/Bj9WD7LnymzDNdzbqd3sWKLYGXmEgm8DabIlxFGVBxLM/
IRwXN+ElYYekbkwWSAl/oHrf2ARvUoubqHEWuF5/hDd8tAlzjAP+J5cyAVcy
uLi9bhPY7vL/fiGcCfst40YcYQvcZrmdbr5MB2spPHe22haMpZTob4alw+s1
ewOa5hbYZm0tvXFJh5vRqgPqplvgVX+GHKiWDunony5+7y0g56hbVQymgRi3
ztv+t1sgYkCdbHF5AenWgR8PCuIQyUs7cxgDKbDNw+aD4DEcEsDJRoKiFHCK
uPhWTAyHKNaOrXQGpABUbi85I41D2sUKdrnJM29UQlTozXM4JDlTrP3X82Q4
9CLxbIo5Drl1q+K79b0kSPyYV8L9EoekyBIarygkAG4qJEcgF4fc4028IHsg
AWzW7rwQLcQhYkaHsy8uxYOcwPGw0xU45Bf96a2fpfHwybHM2rAZhxQsfEg6
IhEPHNvf8CSP45DytQ+dJ8TiIEqlI4zrKB4ZWqNhLaoxcKEhS5omjEeOXXZr
ixeJgfXTHsMvxPHIJ4/HykHsMWAjIyp8RAaP4AJjWToGowE5FtR0/BweWXbr
mup3iIaFHaqr527jkZ6JkYQP6c9Ac/CNtcNzPKJsWxQcczAKSNdj2E9k4JHv
1BaJM6QoqO21q/zzEo+AB7vD1lAkCH3gIroX4pHVdsa+hseRsFnv9sL3DR6Z
Od3gNNkWAUVZ0gOJQ3gke3n3f7VW4cDuWHC2aR8BydWQev2jIwQsMxN2feYi
IMaRN+1KM0KgbsCXMXOYgLRUxUiWu4aAraLRoz1CBESL986sLX8INLOwld2W
JSDKavdZnrsHw6OXDvw4fQLy/OgLoTGZIJgYOoFTSiQgs/cvyB8Z8AclNp4u
rVSm535xL5T4QyzCmmqRzlyv8JXoQpg/qOR8lQvLJSDyoi9GQ8/7Q+qDGMeR
1wRkbKmIXazGD3R2LjHchwiIo4JW0Mc8X2hQfV1fxU1EWp1aTioVe4P5WPIZ
fx4iInJuuuxgjDdse/K45poAEbmu4GXJ7+YNOtVnKxdEiIh97IPiDPCGCZHO
QlEFInLP8vC6U99TYN/5NeWFPhHZtvefiPqmFxgPbX8UEEtEkt4naZhOejLn
/7ll3UQiooqYrKq89oTcPb0ugqlEROC5gIV1sCf8vhx/D8siIp3u8cc9xT0h
oIHPdrWMiNw2Kx5sdvFg5v+UgUMvEZnoTxEL53gEG3dNZPXYSchtc9852lM3
MJP/Gbp7Dwkp/Y6+Nzd0g1aCx1jHPhLie/hLiICMG0QkxIedO0xCPLZvvbow
5Qo8jZ1fpcRJiLabyyj/NVdQ5lCM3H6JhDQGxY9Pn3QBr1rOKcyfhKho5aMr
nPdh3C9byTOYhOila9uvrziDuqZMjFw4CRnUsZmWHHKGXeOaykWxJERiP9Hs
aLIzpLMFxqZkkRDihbDKczzOgJkuIa6NJCSrQXuaS/Ie4Kl9SWIbJETpUOh7
qW8OQAl6sF8eT0YGM/9r7spzAFaWAzGqZDKyf7eYTYeTA7N/jMJusZERvYzW
wPGtuyC8c+JJ5GEyErerQcdd4C5oHFg1/6NERvhfuWtjD+9A6jGB42+ekJHk
1q2LilY2kJHbnN/mQ0Yq9m1d75WzgWwR62MfA8jI+5s926tYbKBYrJDvZwQZ
SYn8mWxfZA1vJWX38qaREbO4WUfvNSuYlru04oOSkd7BQNL3LEuQVXd+ewlH
Qbyfz5oEiZpD8Mnt87tJFKTNypFSQTUH2qGXB4eoFITNpJWN67sZ+PwaeGC9
k4JsT9NZDE83g65khWN+PBTE4DMqxs1tBtY/cWH1ihQk/bjPgMuB25AYHXld
yp2CXEETadLOxvDDU9hn2ZOC/E58zlWqYAzK1o1FDU8pSPyo60A43hjGz/yh
Xg2iIF+il6PMo2+B1He9WtsECvIxuLTE6bURvJPj4c2qpCDZf+UTEvfdhFVa
4dS+3xRE/53epPsuA1C1b4+6+peCCGvU5SbQ9SF87Zu8/yoF+e/JidYDBfrA
x30weJFARVppRc6Kavqgph8s0r+XitC/N+uS/fQgttfSLuoUFcn7EmVJ2Xkd
GKbee9oVqAjNd/39+pguHFtIrd1SoiLDgioOlyt1oZb9I6vjBSqy07KKMm+k
C2OXzxZc1acijQGJI8ol1+B4K88sqzsV8RrJGXhipQMPr5+OPfuYipwdet9c
pqwDjePXFR95U5HPJjavTx3QAV1ieNh0MBXJlg72FHqnDR7Imnh7MhXZO8rQ
eSmlDe21n+/611GRqYL/qpPZtGDPpT/76jEqon+vjLHxUROMhtgbFpupiMoO
tshrkZowv3ye3aKTirCYq73OJGvC/lMVRWcZVGSiTzCvYuUqmDZ36z36SkXi
E0jRH6quQt61H5ulE1RkNu7ZnLXLVVB0FtDkn6ciRj758hKLVyAAr7xs8IeK
tFhNqepWXIGeqBtpUctUZGPgJGHjwRXg5nNRa1+jItv9In2FZK/A//3fRP7/
/+b/AIYRHi4=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.2, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{-3.2, 3.2}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656636033326602*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQdYFOfWnrAsWNJukptyvbm/uRpjTG4Sc71JNEWlS1VQUIqKiFI19gKi
CCJIEZRiF0SK0gQFVBREBFHEhljAhoIUC1IVEPj3nZldB5htYnApz+Muzrff
zJzznq+e7xQd88VWlvbmi60tzAerLzT/08raYtFgtfkLeUWctwjiLSuCIIoH
E/h/K++/9Fcr71+rNb5QIv7/g8k/CrzvJoPSaLNEZc3ZU90jEvQTYg73v1Pf
8h35syL9s2XRN/8admXEN99c+eab4Rlf/+ahWPC8laDqcFHn26d5B64v/eqT
hf/zPvb2jZpm4mvq8dzWxlKHQ65Ljfwjo9fsWL342y15tURLa6uoWyV/tVDq
36N4HEr+4Qx9Xui7xmD1ZaKulXln4x9l6TFfHiqoA0HvvqgqePt2TfP31C28
76dH0tW+/mXy6WqaFxDUrPEo2XDzT3bnidrW1kFNxcFZY0e7Kd7gEcR23w+i
X/UjC3XvUoR/Qv30fnNllr+rrcUOCwsLQo785vC+505bHn6faODVkCfr4btl
VE3OwtSR4+Pkyptbh0p4O0dw+/OJ9+I2Dt9zjRTOMAlvlxOJVVV0psGwib/H
lRPNra0DWusu5FuPGPXFptuNrFiNZCflR3YGaZj+TbWi919UZnvsWDq1bOQn
w6YY7y8lmnilFPgcTuuLso2H/lz59+SKF/wyNoLlWpvLM2PG/N84pbRKlPRr
fXY1z+Hb4d/bX6xjJfhHluePFEEPTfIQ6rZPG0vT3H2X7el/vb6F0eBb3m6q
aQTfKFF+ckzL7ecV+cSzVvb2xcA67tTEofq/xpQB64GtteevzR3+4xDvmw2s
930vwftGstD5XvuRo+XLmoKj7+ZXNfP+X70j2+KHcVpplS+5aTAqilw3KKm4
kQdupVfGouE7h846h54jhpvmCQ+TDLeOmpND1LS2ft50b0fGH795KdxsYL/v
ewne951okmnGvqDEN6ClrsA51GlukumEURkjfrP/+GB5E/0W7sCW2ivbgizV
r475+l8Z//7NbtD+Yj7GaKSN3z28FHN9wVeDQdmIl0Og00HnBcYbw6Icdrsu
Hx5yre7lENjhrh9EvOgHEQTSPHhSCH3cUH75g9zHTeTVDJay5R1nhI9ocKnp
pJX64Fu/a35/B3/IycyUrMO8wcHV1RUfQpH85qLssapyID5PVJQDG8aP3ULI
tY79fSvxXr3SuKAa5fFBT1WUguqUxgehbp6Ojl+unp5vuoGB91FDQ68YY5MN
e8xmrA8yt1gXMGv2OidrO2fynf2Jc3nPaCLxP3z6sZQpdqLem7q3jz5R936M
IoWmphdfPCip/vlqfrl+evptm7jYfOddO3Pct245s32DR3r8yuWHUe+50rgt
T9VVg+pVlLY08P6Pltc87o+tuG4aP3Zrrapy0GMNtUCySZFNtm275wrvEoos
ZdQ8//f3a2oaPn38uO7bW7ce653KuIMqU9JSb81ITr6xLGzvhQ1Bgdm717ul
JS5bknx2rmVsnbrqzhYeVah33tg4au+CRSmeq51P2fgFXBy7L/buZ6mnnvDe
1F0lJhvv6B70/aNNGe8jl3O5/l8p6Y/QDux8N1/wX+l4IsbOPvmC8bQoVEW7
qdDTCUmbP+9glNOqlK1enifX7N51Du1sTkL8VX77M05JKfy8vLzmb9XVz9+u
r29UkLBJS9kD+gmt9zaK/hd36L7p1p35yzd45Wxbtjw1Y+bMuEeaGsGPJ2gE
F0w2iPBa7ZyBev88nvGYbYjvazzdkz4F8vudt3IuP0NxtK2NV5aZqW8Nb/jl
DcNbalRVgor0dPzPmhj7Jc6x9I60t/MMXLrUnXxGf6maWada7wf4ppYu/b0d
Vq6Ps7byOmoxy6d8/FgnTBXVaipBeYZTNh3i0ejl4LCe4FJzhoON/RpJcGKr
x1aW8vMvSpLcy4a7pPd2+TtE3NuZd0jKm9h3yJHfA9BGv09IfvCnj9/5A7a2
SQ81JwRXKysFhq91Pr4oMvKS5cGEq5/wJvdBLO3nPeHNbTj5PeCTJ4/rTY4e
LcT0f8doSvg1M5N9J+1s41VzzhbLNTe3oBY46v/XgNAZIXXmHT2YvoH8eorZ
F2rnbdx0Ps7WLrlUW2vPfV2d0O1Ll6eabd2R//mxk4/Ie0cKbyHfUvvQkQU3
Hh5ZtDAx19Ii5oH+xNAgb6+MQN72p69FyD591DSniCHk3OjRRrnTpvo9Ux6/
pVxTI+CMqbGv3/Ll7tSUIaIZUFoKhSElxVVYx1WoqQaUqasGHJhmvGGNla2z
AvnC3g2zrNMnTzWGD9Ozn6708Dx7fcrkCIgQS3IswUczhE/KntJRcpVyc0uw
ca3UmrAbG9nPHj2qo7eUHHKd0VvxlHX6qJWDAlYNoQsXpVSrqe7asXTZcWx2
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\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", "1", "]"}], ",", "2000"}], 
        "]"}]}], ";", 
      RowBox[{"Mean", "[", "data", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "5000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656636043809372*^9, 3.656636083756143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data1", ",", "40", ",", "\"\<ProbabilityDensity\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656636092006106*^9, 3.656636106241059*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.469]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.469]], RectangleBox[{0.92, 0.}, {0.925, 0.04},
     RoundingRadius->0], RectangleBox[{0.925, 0.}, {0.93, 0.08},
     RoundingRadius->0], RectangleBox[{0.93, 0.}, {0.935, 0.12},
     RoundingRadius->0], RectangleBox[{0.935, 0.}, {0.94, 0.24},
     RoundingRadius->0], RectangleBox[{0.94, 0.}, {0.945, 0.36},
     RoundingRadius->0], RectangleBox[{0.945, 0.}, {0.95, 0.8},
     RoundingRadius->0], RectangleBox[{0.95, 0.}, {0.955, 2.},
     RoundingRadius->0], RectangleBox[{0.955, 0.}, {0.96, 2.96},
     RoundingRadius->0], RectangleBox[{0.96, 0.}, {0.965, 4.12},
     RoundingRadius->0], RectangleBox[{0.965, 0.}, {0.97, 6.68},
     RoundingRadius->0], RectangleBox[{0.97, 0.}, {0.975, 8.2},
     RoundingRadius->0], RectangleBox[{0.975, 0.}, {0.98, 10.28},
     RoundingRadius->0], RectangleBox[{0.98, 0.}, {0.985, 12.72},
     RoundingRadius->0], RectangleBox[{0.985, 0.}, {0.99, 13.52},
     RoundingRadius->0], RectangleBox[{0.99, 0.}, {0.995, 16.64},
     RoundingRadius->0], RectangleBox[{0.995, 0.}, {1., 17.68},
     RoundingRadius->0], RectangleBox[{1., 0.}, {1.005, 18.4},
     RoundingRadius->0], RectangleBox[{1.005, 0.}, {1.01, 18.48},
     RoundingRadius->0], RectangleBox[{1.01, 0.}, {1.015, 15.76},
     RoundingRadius->0], RectangleBox[{1.015, 0.}, {1.02, 13.64},
     RoundingRadius->0], RectangleBox[{1.02, 0.}, {1.025, 11.12},
     RoundingRadius->0], RectangleBox[{1.025, 0.}, {1.03, 7.76},
     RoundingRadius->0], RectangleBox[{1.03, 0.}, {1.035, 6.48},
     RoundingRadius->0], RectangleBox[{1.035, 0.}, {1.04, 4.12},
     RoundingRadius->0], RectangleBox[{1.04, 0.}, {1.045, 3.08},
     RoundingRadius->0], RectangleBox[{1.045, 0.}, {1.05, 2.08},
     RoundingRadius->0], RectangleBox[{1.05, 0.}, {1.055, 1.},
     RoundingRadius->0], RectangleBox[{1.055, 0.}, {1.06, 0.76},
     RoundingRadius->0], RectangleBox[{1.06, 0.}, {1.065, 0.52},
     RoundingRadius->0], RectangleBox[{1.065, 0.}, {1.07, 0.16},
     RoundingRadius->0], RectangleBox[{1.07, 0.}, {1.075, 0.12},
     RoundingRadius->0], RectangleBox[{1.075, 0.}, {1.08, 0.04},
     RoundingRadius->0], RectangleBox[{1.08, 0.}, {1.085, 0.04},
     RoundingRadius->0]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.92, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{0.92, 1.085}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.656636107179437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data1", ",", "40", ",", "\"\<ProbabilityDensity\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "/", "2000"}], "]"}]}], "]"}], ",", "x"}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"x", ",", "0.94", ",", "1.06"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.656636108804059*^9, 3.656636158908149*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.469]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.469]], RectangleBox[{0.92, 0.}, {0.925, 0.04},
      RoundingRadius->0], RectangleBox[{0.925, 0.}, {0.93, 0.08},
      RoundingRadius->0], RectangleBox[{0.93, 0.}, {0.935, 0.12},
      RoundingRadius->0], RectangleBox[{0.935, 0.}, {0.94, 0.24},
      RoundingRadius->0], RectangleBox[{0.94, 0.}, {0.945, 0.36},
      RoundingRadius->0], RectangleBox[{0.945, 0.}, {0.95, 0.8},
      RoundingRadius->0], RectangleBox[{0.95, 0.}, {0.955, 2.},
      RoundingRadius->0], RectangleBox[{0.955, 0.}, {0.96, 2.96},
      RoundingRadius->0], RectangleBox[{0.96, 0.}, {0.965, 4.12},
      RoundingRadius->0], RectangleBox[{0.965, 0.}, {0.97, 6.68},
      RoundingRadius->0], RectangleBox[{0.97, 0.}, {0.975, 8.2},
      RoundingRadius->0], RectangleBox[{0.975, 0.}, {0.98, 10.28},
      RoundingRadius->0], RectangleBox[{0.98, 0.}, {0.985, 12.72},
      RoundingRadius->0], RectangleBox[{0.985, 0.}, {0.99, 13.52},
      RoundingRadius->0], RectangleBox[{0.99, 0.}, {0.995, 16.64},
      RoundingRadius->0], RectangleBox[{0.995, 0.}, {1., 17.68},
      RoundingRadius->0], RectangleBox[{1., 0.}, {1.005, 18.4},
      RoundingRadius->0], RectangleBox[{1.005, 0.}, {1.01, 18.48},
      RoundingRadius->0], RectangleBox[{1.01, 0.}, {1.015, 15.76},
      RoundingRadius->0], RectangleBox[{1.015, 0.}, {1.02, 13.64},
      RoundingRadius->0], RectangleBox[{1.02, 0.}, {1.025, 11.12},
      RoundingRadius->0], RectangleBox[{1.025, 0.}, {1.03, 7.76},
      RoundingRadius->0], RectangleBox[{1.03, 0.}, {1.035, 6.48},
      RoundingRadius->0], RectangleBox[{1.035, 0.}, {1.04, 4.12},
      RoundingRadius->0], RectangleBox[{1.04, 0.}, {1.045, 3.08},
      RoundingRadius->0], RectangleBox[{1.045, 0.}, {1.05, 2.08},
      RoundingRadius->0], RectangleBox[{1.05, 0.}, {1.055, 1.},
      RoundingRadius->0], RectangleBox[{1.055, 0.}, {1.06, 0.76},
      RoundingRadius->0], RectangleBox[{1.06, 0.}, {1.065, 0.52},
      RoundingRadius->0], RectangleBox[{1.065, 0.}, {1.07, 0.16},
      RoundingRadius->0], RectangleBox[{1.07, 0.}, {1.075, 0.12},
      RoundingRadius->0], RectangleBox[{1.075, 0.}, {1.08, 0.04},
      RoundingRadius->0], RectangleBox[{1.08, 0.}, {1.085, 0.04},
      RoundingRadius->0]}, {}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.92, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{0.92, 1.085}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.656636167244059*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", "2000", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"data1", "-", "1"}], ")"}]}], ",", "40", ",", 
     "\"\<ProbabilityDensity\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.656636169017994*^9, 3.656636219140581*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.44099999999999995`]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.44099999999999995`]], 
     RectangleBox[{-3.6, 0.}, {-3.4, 0.001},
      RoundingRadius->0], RectangleBox[{-3.4, 0.}, {-3.2, 0.002},
      RoundingRadius->0], RectangleBox[{-3.2, 0.}, {-3., 0.002},
      RoundingRadius->0], RectangleBox[{-3., 0.}, {-2.8, 0.002},
      RoundingRadius->0], RectangleBox[{-2.8, 0.}, {-2.6, 0.007},
      RoundingRadius->0], RectangleBox[{-2.6, 0.}, {-2.4, 0.009},
      RoundingRadius->0], RectangleBox[{-2.4, 0.}, {-2.2, 0.025},
      RoundingRadius->0], RectangleBox[{-2.2, 0.}, {-2., 0.047},
      RoundingRadius->0], RectangleBox[{-2., 0.}, {-1.8, 0.07},
      RoundingRadius->0], RectangleBox[{-1.8, 0.}, {-1.6, 0.091},
      RoundingRadius->0], RectangleBox[{-1.6, 0.}, {-1.4, 0.14},
      RoundingRadius->0], RectangleBox[{-1.4, 0.}, {-1.2, 0.173},
      RoundingRadius->0], RectangleBox[{-1.2, 0.}, {-1., 0.221},
      RoundingRadius->0], RectangleBox[{-1., 0.}, {-0.8, 0.269},
      RoundingRadius->0], RectangleBox[{-0.8, 0.}, {-0.6, 0.282},
      RoundingRadius->0], RectangleBox[{-0.6, 0.}, {-0.4, 0.335},
      RoundingRadius->0], RectangleBox[{-0.4, 0.}, {-0.2, 0.387},
      RoundingRadius->0], RectangleBox[{-0.2, 0.}, {0., 0.348},
      RoundingRadius->0], RectangleBox[{0., 0.}, {0.2, 0.407},
      RoundingRadius->0], RectangleBox[{0.2, 0.}, {0.4, 0.427},
      RoundingRadius->0], RectangleBox[{0.4, 0.}, {0.6, 0.369},
      RoundingRadius->0], RectangleBox[{0.6, 0.}, {0.8, 0.329},
      RoundingRadius->0], RectangleBox[{0.8, 0.}, {1., 0.277},
      RoundingRadius->0], RectangleBox[{1., 0.}, {1.2, 0.223},
      RoundingRadius->0], RectangleBox[{1.2, 0.}, {1.4, 0.152},
      RoundingRadius->0], RectangleBox[{1.4, 0.}, {1.6, 0.131},
      RoundingRadius->0], RectangleBox[{1.6, 0.}, {1.8, 0.089},
      RoundingRadius->0], RectangleBox[{1.8, 0.}, {2., 0.067},
      RoundingRadius->0], RectangleBox[{2., 0.}, {2.2, 0.048},
      RoundingRadius->0], RectangleBox[{2.2, 0.}, {2.4, 0.024},
      RoundingRadius->0], RectangleBox[{2.4, 0.}, {2.6, 0.022},
      RoundingRadius->0], RectangleBox[{2.6, 0.}, {2.8, 0.008},
      RoundingRadius->0], RectangleBox[{2.8, 0.}, {3., 0.011},
      RoundingRadius->0], RectangleBox[{3., 0.}, {3.2, 0.002},
      RoundingRadius->0], RectangleBox[{3.2, 0.}, {3.4, 0.001},
      RoundingRadius->0], RectangleBox[{3.4, 0.}, {3.6, 0.001},
      RoundingRadius->0], RectangleBox[{3.6, 0.}, {3.8, 0.001},
      RoundingRadius->0]}, {}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
9A==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.6, 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{-3.6, 3.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656636221498973*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
qLbs\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"piEst", " ", "=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "=", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", "50000", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "=", "1"}], ";", 
        RowBox[{"m", "=", "0"}]}], ",", 
       RowBox[{"i", "<", "50000"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "^", "2"}]}], "]"}], 
          "<", "1"}], ",", 
         RowBox[{"m", "++"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"N", "[", 
       RowBox[{"m", "*", 
        RowBox[{"4", "/", "50000"}]}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656636240567913*^9, 3.656636297769335*^9}, {
  3.656636350025281*^9, 3.656636363393614*^9}, {3.65663643933091*^9, 
  3.65663651813277*^9}, {3.656636558759092*^9, 3.656636684686624*^9}, {
  3.656636761401261*^9, 3.656636769598426*^9}, {3.656636815304569*^9, 
  3.65663690086104*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.1428`", ",", "3.13008`", ",", "3.1372`", ",", "3.14008`", ",", 
   "3.13544`", ",", "3.13592`", ",", "3.13056`", ",", "3.1444`", ",", 
   "3.14728`", ",", "3.13768`", ",", "3.13264`", ",", "3.13264`", ",", 
   "3.15168`", ",", "3.14888`", ",", "3.13904`", ",", "3.1356`", ",", 
   "3.13536`", ",", "3.13696`", ",", "3.13344`", ",", "3.13656`", ",", 
   "3.13568`", ",", "3.15528`", ",", "3.14144`", ",", "3.14888`", ",", 
   "3.14136`", ",", "3.14256`", ",", "3.138`", ",", "3.15128`", ",", 
   "3.1368`", ",", "3.1388`", ",", "3.14056`", ",", "3.14704`", ",", 
   "3.1476`", ",", "3.1396`", ",", "3.15648`", ",", "3.14416`", ",", 
   "3.13992`", ",", "3.14016`", ",", "3.13288`", ",", "3.14016`", ",", 
   "3.14944`", ",", "3.14416`", ",", "3.13984`", ",", "3.14912`", ",", 
   "3.14736`", ",", "3.1424`", ",", "3.14816`", ",", "3.1428`", ",", 
   "3.14064`", ",", "3.1432`", ",", "3.14376`", ",", "3.14256`", ",", 
   "3.148`", ",", "3.14584`", ",", "3.13672`", ",", "3.13728`", ",", 
   "3.1452`", ",", "3.13296`", ",", "3.14896`", ",", "3.14688`", ",", 
   "3.14264`", ",", "3.134`", ",", "3.14064`", ",", "3.14304`", ",", 
   "3.13656`", ",", "3.13168`", ",", "3.15072`", ",", "3.14184`", ",", 
   "3.1504`", ",", "3.15616`", ",", "3.1408`", ",", "3.146`", ",", "3.1464`", 
   ",", "3.1444`", ",", "3.15008`", ",", "3.15552`", ",", "3.15112`", ",", 
   "3.13928`", ",", "3.14984`", ",", "3.1468`", ",", "3.13232`", ",", 
   "3.13848`", ",", "3.13344`", ",", "3.13368`", ",", "3.14744`", ",", 
   "3.14088`", ",", "3.15864`", ",", "3.15024`", ",", "3.13632`", ",", 
   "3.13704`", ",", "3.13264`", ",", "3.13632`", ",", "3.1388`", ",", 
   "3.14984`", ",", "3.14056`", ",", "3.15056`", ",", "3.14016`", ",", 
   "3.13584`", ",", "3.15024`", ",", "3.14784`"}], "}"}]], "Output",
 CellChangeTimes->{{3.656636585044008*^9, 3.656636603684315*^9}, 
   3.656636658572089*^9, {3.656636770566071*^9, 3.656636781754889*^9}, {
   3.6566368422177*^9, 3.656636860150381*^9}, 3.656637007042958*^9, 
   3.65663716615141*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "piEst", "]"}]], "Input",
 CellChangeTimes->{{3.656637024431838*^9, 3.656637029578041*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000017`, 0.24, 0.6], PointBox[CompressedData["
1:eJxdlAlIVFEUhl+2aGbTMraq5aip6WSaZqv6q6OOOqPjvNkslLImBSsr24iy
ZxFElLZhaJHtWYpStm+8cMkKSZsKCkLabFogKdosKaXOhXkDw/DN//777rnn
P1eRU6C3OnEct7j32/f779MVo/1Swq/2G4z/f6DdLsvJdSV2Qddote73WOLh
6Cwzxb+cQOyOZ6XuexaOIh6Lrd1ls7JGE3tiA7/HddEQYm88MX2cej2A2Af3
n3T7HJ1C7Ify4ns/vo8j9ke1YmXpyWHEgRIOwpaqX9yJSGIlDLMtf96GEoeg
ta6Tu+1JHIq8+veFF9l+wyAvOlM5g/E0HHoxaGMRqzccBbbKHvUI4ghc3f6p
sWYM8XSENBmtHcwfiTUtrSv6RxPPwLimVanVCuKZkv3NAl/vPK+Y6bPx86Z2
8zdf4jm40LL2VuV44rk4kv46+eF04ijIboWWB7H9RmP9hpPKeFZvDEr6Pf3w
fCIxsO7o1TRfOm8BeOt12q4OIT0WUcpHFZ1epMfC0yYvWw/S41CsqJ4fRf0T
4mApFBaUsDzEo6bqdoQbvU+IB2c+v8h3OOkqia5Cw6WE8qHTSE+QrJ+A3nAV
LGbrJ6KqoNxmDSM9EXvtVvf7LD9JyK9Yd+gYnZ+QBFPF/i3Lp5KuhkPeBTWM
ctVzZ2/SkxGqOeWaOIn0ZFS27DuR7096imN/hBTc7WsPWz8V7WWFk2uDSE9F
Uk3TaY71R4PLgfWx/pRvQYMKF4/D2ZNJ1+JOnpdRS+claOGhaegaQfVyaXi3
6VX+AyXpaRAfXFnhzeY3HR3puw4sH0l6uqQ+HY4FtgV8puehc8yzoEOmZml0
7dD/LOoQZvtWVxNB/gz89trhtMmH/BkYtTPl/QDShQxwO3Pb2mLIn4FXkePF
+ez9emRfS3ZzCia/HpAvbLARC3rH+0HUo1t12C8rnPw87vXIEoppvsBDrpTl
FtE8CDwUbwIeR1N+RR6nhmXpOli+DPBZ2jch5Ddg97PGuz0y8huQFf5zyUEP
8hsk829Eo8uL9mZiGJHZ3TbwK5snI86qt53bRvWKRrjXZ7u9UZHfhO15q53P
UT0wwcrXdoWw8zch58vKZVWUF9Ekue/Mjs/D7DjvgtmxXtEsmX8Ljtd5t1qo
X7BI5tGCG/ZgdTjd36LFcb9cJubw9hvNvffFX0Xwcv8=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 3.13008},
  Method->{},
  PlotRange->{{0, 100.}, {3.13008, 3.15864}},
  PlotRangeClipping->True,
  PlotRangePadding->{{2., 2.}, {0.0005712000000000028, 
   0.0005712000000000028}}]], "Output",
 CellChangeTimes->{3.656637176288013*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "piEst", "]"}]], "Input",
 CellChangeTimes->{{3.656637040248433*^9, 3.656637050917957*^9}}],

Cell[BoxData["3.1422736`"], "Output",
 CellChangeTimes->{3.656637178908225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variance", "[", "piEst", "]"}]], "Input",
 CellChangeTimes->{{3.656637052308419*^9, 3.656637056770855*^9}}],

Cell[BoxData["0.00004346520307070745`"], "Output",
 CellChangeTimes->{3.656637180719288*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656637193278319*^9, 3.656637209321546*^9}, {
  3.656637700108488*^9, 3.65663770216125*^9}, {3.656637774745771*^9, 
  3.656637775858924*^9}, {3.656637812538416*^9, 3.656637815376457*^9}, {
  3.656638062610888*^9, 3.656638064991945*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "3000"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ",", 
     RowBox[{"j", "\[LessEqual]", "3000"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0.5", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"P", "[", 
        RowBox[{"[", 
         RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"P", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656637218336284*^9, 3.656637294365798*^9}, {
  3.656637403037951*^9, 3.656637403415377*^9}, {3.656637706362403*^9, 
  3.656637707153375*^9}, {3.656637816798158*^9, 3.656637818732137*^9}, {
  3.656638066699735*^9, 3.656638068016285*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eign", "=", 
   RowBox[{"Eigenvalues", "[", "P", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656637299412921*^9, 3.656637306926604*^9}, {
  3.656637763895535*^9, 3.65663778043854*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"eign", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "150"}], ",", "150", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65663743349275*^9, 3.656637444396807*^9}, {
  3.656638776171182*^9, 3.656638835524092*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.392]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.392]], RectangleBox[{-110., 0.}, {-105., 15.},
     RoundingRadius->0], RectangleBox[{-105., 0.}, {-100., 29.},
     RoundingRadius->0], RectangleBox[{-100., 0.}, {-95., 40.},
     RoundingRadius->0], RectangleBox[{-95., 0.}, {-90., 46.},
     RoundingRadius->0], RectangleBox[{-90., 0.}, {-85., 54.},
     RoundingRadius->0], RectangleBox[{-85., 0.}, {-80., 59.},
     RoundingRadius->0], RectangleBox[{-80., 0.}, {-75., 60.},
     RoundingRadius->0], RectangleBox[{-75., 0.}, {-70., 65.},
     RoundingRadius->0], RectangleBox[{-70., 0.}, {-65., 70.},
     RoundingRadius->0], RectangleBox[{-65., 0.}, {-60., 71.},
     RoundingRadius->0], RectangleBox[{-60., 0.}, {-55., 75.},
     RoundingRadius->0], RectangleBox[{-55., 0.}, {-50., 74.},
     RoundingRadius->0], RectangleBox[{-50., 0.}, {-45., 80.},
     RoundingRadius->0], RectangleBox[{-45., 0.}, {-40., 81.},
     RoundingRadius->0], RectangleBox[{-40., 0.}, {-35., 80.},
     RoundingRadius->0], RectangleBox[{-35., 0.}, {-30., 84.},
     RoundingRadius->0], RectangleBox[{-30., 0.}, {-25., 85.},
     RoundingRadius->0], RectangleBox[{-25., 0.}, {-20., 85.},
     RoundingRadius->0], RectangleBox[{-20., 0.}, {-15., 87.},
     RoundingRadius->0], RectangleBox[{-15., 0.}, {-10., 86.},
     RoundingRadius->0], RectangleBox[{-10., 0.}, {-5., 86.},
     RoundingRadius->0], RectangleBox[{-5., 0.}, {0., 88.},
     RoundingRadius->0], RectangleBox[{0., 0.}, {5., 86.},
     RoundingRadius->0], RectangleBox[{5., 0.}, {10., 87.},
     RoundingRadius->0], RectangleBox[{10., 0.}, {15., 86.},
     RoundingRadius->0], RectangleBox[{15., 0.}, {20., 87.},
     RoundingRadius->0], RectangleBox[{20., 0.}, {25., 85.},
     RoundingRadius->0], RectangleBox[{25., 0.}, {30., 86.},
     RoundingRadius->0], RectangleBox[{30., 0.}, {35., 82.},
     RoundingRadius->0], RectangleBox[{35., 0.}, {40., 81.},
     RoundingRadius->0], RectangleBox[{40., 0.}, {45., 82.},
     RoundingRadius->0], RectangleBox[{45., 0.}, {50., 77.},
     RoundingRadius->0], RectangleBox[{50., 0.}, {55., 77.},
     RoundingRadius->0], RectangleBox[{55., 0.}, {60., 73.},
     RoundingRadius->0], RectangleBox[{60., 0.}, {65., 72.},
     RoundingRadius->0], RectangleBox[{65., 0.}, {70., 70.},
     RoundingRadius->0], RectangleBox[{70., 0.}, {75., 67.},
     RoundingRadius->0], RectangleBox[{75., 0.}, {80., 60.},
     RoundingRadius->0], RectangleBox[{80., 0.}, {85., 58.},
     RoundingRadius->0], RectangleBox[{85., 0.}, {90., 52.},
     RoundingRadius->0], RectangleBox[{90., 0.}, {95., 45.},
     RoundingRadius->0], RectangleBox[{95., 0.}, {100., 42.},
     RoundingRadius->0], RectangleBox[{100., 0.}, {105., 29.},
     RoundingRadius->0], RectangleBox[{105., 0.}, {110., 15.},
     RoundingRadius->0]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-110., 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{-150., 150.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656637645642631*^9, {3.65663769477529*^9, 3.65663771606089*^9}, {
   3.656637769201809*^9, 3.656637782356464*^9}, 3.6566378561673*^9, {
   3.656638766031798*^9, 3.656638836260987*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eign2", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"t", "-", "16"}], ")"}], "*", "10"}], ",", 
      RowBox[{
       RowBox[{"BinCounts", "[", 
        RowBox[{"eign", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "150"}], ",", "150", ",", "10"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "t", "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656637454628826*^9, 3.656637491529789*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "150"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "140"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "130"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "110"}], ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "100"}], ",", "86"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "90"}], ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "80"}], ",", "125"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "70"}], ",", "141"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "60"}], ",", "149"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "50"}], ",", "161"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "40"}], ",", "164"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "30"}], ",", "170"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "20"}], ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "174"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "173"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "171"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "163"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "159"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "150"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "142"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "127"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "110"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "87"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"110", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.656637859241444*^9, 3.656638875257653*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"m", "=", "1"}], ";", 
    RowBox[{"sum", "=", "0"}]}], ",", 
   RowBox[{"m", "\[LessEqual]", "30"}], ",", 
   RowBox[{"m", "++"}], ",", 
   RowBox[{"sum", "=", 
    RowBox[{"sum", "+", 
     RowBox[{"10", "*", 
      RowBox[{
       RowBox[{"BinCounts", "[", 
        RowBox[{"eign", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "150"}], ",", "150", ",", "10"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "m", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6566374983874*^9, 3.656637548183468*^9}}],

Cell[CellGroupData[{

Cell[BoxData["sum"], "Input",
 CellChangeTimes->{{3.656637558964485*^9, 3.656637560062469*^9}}],

Cell[BoxData["29990"], "Output",
 CellChangeTimes->{3.656637870320781*^9, 3.656638881652427*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eign3", "=", "eign2"}], ";"}]], "Input",
 CellChangeTimes->{{3.656637563732*^9, 3.65663756912943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eign3", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"eign2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "29990"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.656637570088657*^9, 3.656637594035635*^9}, {
   3.656637895940047*^9, 3.65663789731741*^9}, 3.656637995166408*^9, 
   3.656638886458388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.0014671557185728576`", 
   ",", "0.002867622540846949`", ",", "0.0037679226408802932`", ",", 
   "0.004168056018672891`", ",", "0.004701567189063021`", ",", 
   "0.004968322774258086`", ",", "0.005368456152050683`", ",", 
   "0.005468489496498833`", ",", "0.0056685561853951315`", ",", 
   "0.005768589529843281`", ",", "0.005801933977992664`", ",", 
   "0.005768589529843281`", ",", "0.005768589529843281`", ",", 
   "0.005701900633544515`", ",", "0.00543514504834945`", ",", 
   "0.005301767255751918`", ",", "0.005001667222407469`", ",", 
   "0.004734911637212404`", ",", "0.004234744914971657`", ",", 
   "0.003667889296432144`", ",", "0.002900966988996332`", ",", 
   "0.0014671557185728576`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.656637881517387*^9, 3.656637897826668*^9}, 
   3.656637995774972*^9, 3.656638887166595*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "eign3", "]"}]], "Input",
 CellChangeTimes->{{3.65663790131556*^9, 3.656637908473337*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000017`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQYHkg4wIIOGRFS+QwIqnyEOTX30gds8oqWbOCPs
IQKRB2Sqvytcr02H8BvCDmxY1Sbw4m4eVD7kwDSuOSxtQoVQ+cADkwKFQj87
FkPl/Q4Ilvr+XRlZAuV7HvDTWvbT+m8plO9yYF74ngqFtDIo3+6AzaYXZS/N
y6F8kwM99/99PbsAxlc58NuZ7fSRwzA+AwOavAMq38RhjdgH7wdRML6dg97n
LYs1nWH2uTjkJ07399sOc4+nQ8PNkEsLamDu9XNg2iap9SqlGOY/h9LLq9YV
RxTC/O8gFBAlJM+TBwsfB4j70mHh54ASng3RDmjhj8p3SEDlNyTC+QBO6HIM

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  Method->{},
  PlotRange->{{-150., 140.}, {0, 0.005801933977992664}},
  PlotRangeClipping->True,
  PlotRangePadding->{{5.8, 5.8}, {0.00011603867955985328`, 
   0.00011603867955985328`}}]], "Output",
 CellChangeTimes->{3.656637908917952*^9, 3.656637997515577*^9, 
  3.656638889401501*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", 
       RowBox[{"(", 
        RowBox[{"Pi", "*", 
         RowBox[{"110", "^", "2"}]}], ")"}]}], "*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"110", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "120"}], ",", "120"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "eign3", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.656637917047085*^9, 3.656637983218621*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
f57I63CKgoZAZakObRVcJ1I594R4ocmRcqNuZfxbdiAEp1Fw4BNq+WmqjP/e
cGIXp1MQLlu9dM9PRWzvLexnnU2B0LIAp/Mtirgp89LQXeLKSdEzrYWK2HTL
xgLlHApG6iNUNJwV8ezi1KOLcikI9NeyHqxQwFENnsFVZyjwvHo5cVegPLaM
tjo2fI6CvxluLRkgjy3Mt73Znk/BuQOLROrXyGO/rqWON4k/OPoUyjbKYb1v
jQ2RBRS4jq9/1CUrh9cnBreOnafATj9rnvFRBi/SWuzy4BIFu+P4fp49J4nb
uXbedSUUnBRVbPSlSeKaxaVHFpRScO2aRZb6Ikm8eb5l0pJ4tCNW/8FuCRzB
SSp5ShxuOBX12UQcXyjyjGm+Qtb/eM+08oe1uF3r8ssrVyk4e/Rf0/jJtdhO
yujIF+JaKcmcGrQWh9cPHRK/RsEfB7qhfekaPO7f4n6MOP7KcyqUEsUHOv+E
ssvJ/PjU/qoSFcaCIro7uivIep599yT26WrcskqiePl1Cp6k/cy1il2NpxaH
GRgTL+NqG7/vFcLFQwH6acSpEiXRc7cEcenmZcX6lRRcv9lg2xAgiM02VBvt
IG6z/bIuRUIQC4SPiSYSy4+bRJotWYWfrOEvf0G84Yryz4Si5dihA7Z53qAg
+J1Plujy5VjOPUcznrhicYF+SYQA5gtPZ1wk1vER4TRbLMM79xw8/pnYSGLB
jOBnPtxtmLiTeZOC/babci7Z8GHX9zYpUcT3KcpwY+USfM3o8aLTxKSBoOgH
F+OqVXNtjcRWKR2/8tfz4lvs+C6lW2Q+stz7NI4txDfmVwxtIhYuePW6bnIB
3uEca+NM3FPRXNH5mAd/YPFP7ye2vmt1LkSXB1tmK1ulErMPHhGeM57npp3Q
+n6BePpC1FOT3j/cJfw8kg3EDTdCilg1c1x23rPrb4hPP/I7uD/1N3eYJymz
l1i9102/1ugXd1NVC21hFQWzU46CHStmuK2ZbBVB4qbFVkOzX35yrUK6aOuJ
vZUNLhqn/OA+SWzI1CfWNNI8wPSZ5Hp3qlYi4j82SvRowwnunNdRSXvip0wp
3TPLx7kx050fXInV29XFw+tHuBejNPt3ED+elmy7ETLEXVgSbe1P7CO2Imli
7QB3tSWeCfn/+4z/muo86uNKziycjSTOYY9M7Anu5dqyLexjiHVjO0sq13zh
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
sLHhlhqIJ+//+vEgiVdZZtxOnxf+B6Nrdh8=
      "]]}}, {{}, 
    {RGBColor[0.24720000000000017`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQYHkg4wIIOGRFS+QwIqnyEOTX30gds8oqWbOCPs
IQKRB2Sqvytcr02H8BvCDmxY1Sbw4m4eVD7kwDSuOSxtQoVQ+cADkwKFQj87
FkPl/Q4Ilvr+XRlZAuV7HvDTWvbT+m8plO9yYF74ngqFtDIo3+6AzaYXZS/N
y6F8kwM99/99PbsAxlc58NuZ7fSRwzA+AwOavAMq38RhjdgH7wdRML6dg97n
LYs1nWH2uTjkJ07399sOc4+nQ8PNkEsLamDu9XNg2iap9SqlGOY/h9LLq9YV
RxTC/O8gFBAlJM+TBwsfB4j70mHh54ASng3RDmjhj8p3SEDlNyTC+QBO6HIM

      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-120, 120}, {0., 0.005787452394471019}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.656637958503585*^9, 3.656637999783665*^9}, 
   3.656638891984157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"eign3", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6566380142451*^9, 3.656638021607702*^9}}],

Cell[BoxData["0.0033333333333333335`"], "Output",
 CellChangeTimes->{3.656638022720791*^9, 3.656638894897643*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variance", "[", 
  RowBox[{"eign3", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.656638023707457*^9, 3.656638032999829*^9}}],

Cell[BoxData["5.493200476040935`*^-6"], "Output",
 CellChangeTimes->{3.65663803416289*^9, 3.656638895795797*^9}]
}, Open  ]]
},
WindowSize->{659, 716},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
FrontEndVersion->"9.0 for Linux x86 (32-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 140, 2, 31, "Input"],
Cell[722, 26, 466, 10, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225, 41, 169, 3, 31, "Input"],
Cell[1397, 46, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1528, 52, 173, 3, 31, "Input"],
Cell[1704, 57, 70, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1811, 63, 429, 13, 31, "Input"],
Cell[2243, 78, 427, 13, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2707, 96, 449, 13, 31, "Input"],
Cell[3159, 111, 491, 16, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3687, 132, 449, 13, 31, "Input"],
Cell[4139, 147, 581, 19, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4757, 171, 365, 10, 31, "Input"],
Cell[5125, 183, 1869, 56, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7031, 244, 390, 11, 31, "Input"],
Cell[7424, 257, 2038, 61, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9499, 323, 389, 11, 31, "Input"],
Cell[9891, 336, 2374, 69, 84, "Output"]
}, Open  ]],
Cell[12280, 408, 626, 17, 72, "Input"],
Cell[CellGroupData[{
Cell[12931, 429, 193, 4, 31, "Input"],
Cell[13127, 435, 2481, 46, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15645, 486, 908, 24, 132, "Input"],
Cell[16556, 512, 22180, 372, 244, 10589, 180, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38773, 889, 980, 27, 132, "Input"],
Cell[39756, 918, 23620, 396, 243, 12490, 212, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[63391, 1317, 484, 14, 52, "Input"],
Cell[CellGroupData[{
Cell[63900, 1335, 194, 4, 31, "Input"],
Cell[64097, 1341, 2849, 52, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66983, 1398, 742, 19, 132, "Input"],
Cell[67728, 1419, 9174, 156, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76939, 1580, 802, 21, 112, "Input"],
Cell[77744, 1603, 21577, 363, 243, 11162, 190, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99358, 1971, 1953, 52, 152, "Input"],
Cell[101314, 2025, 2059, 31, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103410, 2061, 131, 2, 31, "Input"],
Cell[103544, 2065, 1682, 33, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105263, 2103, 127, 2, 31, "Input"],
Cell[105393, 2107, 79, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105509, 2113, 131, 2, 31, "Input"],
Cell[105643, 2117, 92, 1, 31, "Output"]
}, Open  ]],
Cell[105750, 2121, 510, 12, 31, "Input"],
Cell[106263, 2135, 1197, 31, 112, "Input"],
Cell[107463, 2168, 223, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[107711, 2177, 286, 7, 31, "Input"],
Cell[108000, 2186, 3604, 66, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111641, 2257, 656, 18, 72, "Input"],
Cell[112300, 2277, 2282, 78, 132, "Output"]
}, Open  ]],
Cell[114597, 2358, 637, 19, 72, "Input"],
Cell[CellGroupData[{
Cell[115259, 2381, 95, 1, 31, "Input"],
Cell[115357, 2384, 96, 1, 31, "Output"]
}, Open  ]],
Cell[115468, 2388, 137, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[115630, 2395, 444, 13, 31, "Input"],
Cell[116077, 2410, 976, 17, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117090, 2432, 130, 2, 31, "Input"],
Cell[117223, 2436, 904, 21, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118164, 2462, 675, 20, 92, "Input"],
Cell[118842, 2484, 8251, 144, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127130, 2633, 204, 5, 31, "Input"],
Cell[127337, 2640, 113, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127487, 2646, 210, 5, 31, "Input"],
Cell[127700, 2653, 112, 1, 33, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
